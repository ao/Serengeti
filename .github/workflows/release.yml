name: Release to DockerHub

on:
  # Trigger on successful completion of the Maven CI workflow
  workflow_run:
    workflows: ["Java CI with Maven"]
    types:
      - completed
    branches: [main]

  # Allow manual triggering
  workflow_dispatch:

jobs:
  release:
    # Only run if the triggering workflow was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Read Version
        id: read_version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ataiva/serengeti
          tags: |
            type=raw,value=${{ steps.read_version.outputs.VERSION }}
            type=semver,pattern={{version}},value=${{ steps.read_version.outputs.VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.read_version.outputs.VERSION }}
            type=semver,pattern={{major}},value=${{ steps.read_version.outputs.VERSION }}
            type=raw,value=latest
            type=ref,event=branch
            type=sha
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.read_version.outputs.VERSION }}
          release_name: Release v${{ steps.read_version.outputs.VERSION }}
          draft: false
          prerelease: false
      
      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/Serengeti-${{ steps.read_version.outputs.VERSION }}-jar-with-dependencies.jar
          asset_name: Serengeti-${{ steps.read_version.outputs.VERSION }}-jar-with-dependencies.jar
          asset_content_type: application/java-archive
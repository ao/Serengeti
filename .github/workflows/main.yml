# Main CI workflow for Serengeti

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main, master, and develop branches
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B compile --file pom.xml

      - name: Run SpotBugs
        run: mvn spotbugs:check

      - name: Run PMD
        run: mvn pmd:check

      - name: Run Checkstyle
        run: mvn checkstyle:check
        
  # Run basic StorageScheduler tests to ensure they pass
  storage-scheduler-basic-tests:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      
      - name: Run StorageScheduler Fast Tests
        run: |
          chmod +x ./run_storage_scheduler_tests.sh
          ./run_storage_scheduler_tests.sh --fast
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: storage-scheduler-fast-test-results
          path: target/surefire-reports/
          
  # Generate comprehensive test reports
  generate-test-reports:
    runs-on: ubuntu-latest
    needs: [build, storage-scheduler-basic-tests]
    if: always()
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: test-results
      
      - name: Generate Test Reports
        run: |
          chmod +x ./generate_test_report.sh
          ./generate_test_report.sh --format html --publish ${{ github.workspace }}/reports
          ./generate_test_report.sh --format xml --output-dir ${{ github.workspace }}/reports/xml
          ./generate_test_report.sh --format json --output-dir ${{ github.workspace }}/reports/json
      
      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: storage-scheduler-test-reports
          path: reports/

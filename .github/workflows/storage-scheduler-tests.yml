name: StorageScheduler Tests

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'src/main/java/com/ataiva/serengeti/storage/StorageScheduler.java'
      - 'src/test/java/com/ataiva/serengeti/unit/storage/StorageSchedulerTest.java'
      - 'src/test/java/com/ataiva/serengeti/integration/StorageSchedulerIntegrationTest.java'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'src/main/java/com/ataiva/serengeti/storage/StorageScheduler.java'
      - 'src/test/java/com/ataiva/serengeti/unit/storage/StorageSchedulerTest.java'
      - 'src/test/java/com/ataiva/serengeti/integration/StorageSchedulerIntegrationTest.java'
  workflow_dispatch:  # Allow manual triggering

jobs:
  comprehensive-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run StorageScheduler Comprehensive Tests
      run: mvn test -Dtest=com.ataiva.serengeti.unit.storage.StorageSchedulerTest -Pjacoco
    
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: comprehensive-test-results
        path: target/surefire-reports/
    
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: comprehensive-coverage-report
        path: target/site/jacoco/
  
  integration-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run StorageScheduler Integration Tests
      run: mvn test -Dtest=com.ataiva.serengeti.integration.StorageSchedulerIntegrationTest -Pjacoco
    
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-results
        path: target/surefire-reports/
    
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: integration-coverage-report
        path: target/site/jacoco/
  
  mutation-tests:
    runs-on: ubuntu-latest
    needs: [comprehensive-tests, integration-tests]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run StorageScheduler Mutation Tests
      run: mvn test -Pstorage-scheduler-mutation
    
    - name: Upload Mutation Test Results
      uses: actions/upload-artifact@v4
      with:
        name: mutation-test-results
        path: target/pit-reports/
  
  coverage-check:
    runs-on: ubuntu-latest
    needs: [comprehensive-tests, integration-tests]
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all coverage reports
      uses: actions/download-artifact@v4
      with:
        path: coverage-reports
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Merge Coverage Reports
      run: |
        mkdir -p merged-coverage
        cp -r coverage-reports/comprehensive-coverage-report/* merged-coverage/
        cp -r coverage-reports/integration-coverage-report/* merged-coverage/
    
    - name: Check Line Coverage
      run: |
        LINE_COVERAGE=$(grep -A1 "Lines:" merged-coverage/index.html | tail -n1 | grep -o '[0-9]*%' | head -1 | tr -d '%')
        echo "Line coverage: $LINE_COVERAGE%"
        if [ "$LINE_COVERAGE" -lt "90" ]; then
          echo "Line coverage is below 90%"
          exit 1
        fi
    
    - name: Check Branch Coverage
      run: |
        BRANCH_COVERAGE=$(grep -A1 "Branches:" merged-coverage/index.html | tail -n1 | grep -o '[0-9]*%' | head -1 | tr -d '%')
        echo "Branch coverage: $BRANCH_COVERAGE%"
        if [ "$BRANCH_COVERAGE" -lt "85" ]; then
          echo "Branch coverage is below 85%"
          exit 1
        fi
    
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          coverage-reports/comprehensive-test-results/*.xml
          coverage-reports/integration-test-results/*.xml
    
    - name: Upload Merged Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: merged-coverage-report
        path: merged-coverage/